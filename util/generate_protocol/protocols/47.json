{
  "version": 47,
  "serverboundPackets": [
    {
      "name": "Keep Alive",
      "id": 0,
      "state": "Play",
      "direction": "Server",
      "fields": [{ "name": "Keep Alive ID", "type": "VarInt", "notes": "" }]
    },
    {
      "name": "Chat Message",
      "id": 1,
      "state": "Play",
      "direction": "Server",
      "fields": [
        {
          "name": "Message",
          "type": "String",
          "notes": "The client sends the raw input, not Chat"
        }
      ]
    },
    {
      "name": "Use Entity",
      "id": 2,
      "state": "Play",
      "direction": "Server",
      "fields": [
        { "name": "Target", "type": "VarInt", "notes": "" },
        {
          "name": "Type",
          "type": "VarInt",
          "notes": "0: interact, 1: attack, 2: interact at"
        },
        {
          "name": "Target X",
          "type": "Optional Float",
          "notes": "Only if Type is interact at"
        },
        {
          "name": "Target Y",
          "type": "Optional Float",
          "notes": "Only if Type is interact at"
        },
        {
          "name": "Target Z",
          "type": "Optional Float",
          "notes": "Only if Type is interact at"
        }
      ]
    },
    {
      "name": "Player",
      "id": 3,
      "state": "Play",
      "direction": "Server",
      "fields": [
        {
          "name": "On Ground",
          "type": "Boolean",
          "notes": "True if the client is on the ground, false otherwise"
        }
      ]
    },
    {
      "name": "Player Position",
      "id": 4,
      "state": "Play",
      "direction": "Server",
      "fields": [
        { "name": "X", "type": "Double", "notes": "Absolute position" },
        {
          "name": "Feet Y",
          "type": "Double",
          "notes": "Absolute position, normally Head Y - 1.62"
        },
        { "name": "Z", "type": "Double", "notes": "Absolute position" },
        {
          "name": "On Ground",
          "type": "Boolean",
          "notes": "True if the client is on the ground, false otherwise"
        }
      ]
    },
    {
      "name": "Player Look",
      "id": 5,
      "state": "Play",
      "direction": "Server",
      "fields": [
        {
          "name": "Yaw",
          "type": "Float",
          "notes": "Absolute rotation on the X Axis, in degrees"
        },
        {
          "name": "Pitch",
          "type": "Float",
          "notes": "Absolute rotation on the Y Axis, in degrees"
        },
        {
          "name": "On Ground",
          "type": "Boolean",
          "notes": "True if the client is on the ground, False otherwise"
        }
      ]
    },
    {
      "name": "Player Position And Look",
      "id": 6,
      "state": "Play",
      "direction": "Server",
      "fields": [
        { "name": "X", "type": "Double", "notes": "Absolute position" },
        {
          "name": "Feet Y",
          "type": "Double",
          "notes": "Absolute feet position, normally Head Y - 1.62"
        },
        { "name": "Z", "type": "Double", "notes": "Absolute position" },
        {
          "name": "Yaw",
          "type": "Float",
          "notes": "Absolute rotation on the X Axis, in degrees"
        },
        {
          "name": "Pitch",
          "type": "Float",
          "notes": "Absolute rotation on the Y Axis, in degrees"
        },
        {
          "name": "On Ground",
          "type": "Boolean",
          "notes": "True if the client is on the ground, false otherwise"
        }
      ]
    },
    {
      "name": "Player Digging",
      "id": 7,
      "state": "Play",
      "direction": "Server",
      "fields": [
        {
          "name": "Status",
          "type": "Byte",
          "notes": "The action the player is taking against the block (see below)"
        },
        { "name": "Location", "type": "Position", "notes": "Block position" },
        {
          "name": "Face",
          "type": "Byte",
          "notes": "The face being hit (see below)"
        }
      ]
    },
    {
      "name": "Player Block Placement",
      "id": 8,
      "state": "Play",
      "direction": "Server",
      "fields": [
        { "name": "Location", "type": "Position", "notes": "Block position" },
        {
          "name": "Face",
          "type": "Byte",
          "notes": "The face on which the block is placed (see above)"
        },
        { "name": "Held Item", "type": "Slot", "notes": "" },
        {
          "name": "Cursor Position X",
          "type": "Byte",
          "notes": "The position of the crosshair on the block"
        },
        { "name": "Cursor Position Y", "type": "Byte", "notes": "" },
        { "name": "Cursor Position Z", "type": "Byte", "notes": "" }
      ]
    },
    {
      "name": "Held Item Change",
      "id": 9,
      "state": "Play",
      "direction": "Server",
      "fields": [
        {
          "name": "Slot",
          "type": "Short",
          "notes": "The slot which the player has selected (0–8)"
        }
      ]
    },
    {
      "name": "Animation",
      "id": 10,
      "state": "Play",
      "direction": "Server",
      "fields": []
    },
    {
      "name": "Entity Action",
      "id": 11,
      "state": "Play",
      "direction": "Server",
      "fields": [
        { "name": "Entity ID", "type": "VarInt", "notes": "Player ID" },
        {
          "name": "Action ID",
          "type": "VarInt",
          "notes": "The ID of the action, see below"
        },
        {
          "name": "Action Parameter",
          "type": "VarInt",
          "notes": "Only used by Horse Jump Boost, in which case it ranges from 0 to 100. In all other cases it is 0."
        }
      ]
    },
    {
      "name": "Steer Vehicle",
      "id": 12,
      "state": "Play",
      "direction": "Server",
      "fields": [
        {
          "name": "Sideways",
          "type": "Float",
          "notes": "Positive to the left of the player"
        },
        { "name": "Forward", "type": "Float", "notes": "Positive forward" },
        {
          "name": "Flags",
          "type": "Unsigned Byte",
          "notes": "Bit mask. 0x1: jump, 0x2: unmount"
        }
      ]
    },
    {
      "name": "Close Window",
      "id": 13,
      "state": "Play",
      "direction": "Server",
      "fields": [
        {
          "name": "Window ID",
          "type": "Unsigned Byte",
          "notes": "This is the ID of the window that was closed. 0 for player inventory."
        }
      ]
    },
    {
      "name": "Click Window",
      "id": 14,
      "state": "Play",
      "direction": "Server",
      "fields": [
        {
          "name": "Window ID",
          "type": "Unsigned Byte",
          "notes": "The ID of the window which was clicked. 0 for player inventory."
        },
        {
          "name": "Slot",
          "type": "Short",
          "notes": "The clicked slot number, see below"
        },
        {
          "name": "Button",
          "type": "Byte",
          "notes": "The button used in the click, see below"
        },
        {
          "name": "Action Number",
          "type": "Short",
          "notes": "A unique number for the action, implemented by Notchian as a counter, starting at 1. Used by the server to send back a Confirm Transaction."
        },
        {
          "name": "Mode",
          "type": "Byte",
          "notes": "Inventory operation mode, see below"
        },
        {
          "name": "Clicked item",
          "type": "Slot",
          "notes": "The clicked slot. Has to be empty (item ID = -1) for drop mode."
        }
      ]
    },
    {
      "name": "Confirm Transaction",
      "id": 15,
      "state": "Play",
      "direction": "Server",
      "fields": [
        {
          "name": "Window ID",
          "type": "Byte",
          "notes": "The ID of the window that the action occurred in"
        },
        {
          "name": "Action Number",
          "type": "Short",
          "notes": "Every action that is to be accepted has a unique number. This field corresponds to that number."
        },
        {
          "name": "Accepted",
          "type": "Boolean",
          "notes": "Whether the action was accepted"
        }
      ]
    },
    {
      "name": "Creative Inventory Action",
      "id": 16,
      "state": "Play",
      "direction": "Server",
      "fields": [
        { "name": "Slot", "type": "Short", "notes": "Inventory slot" },
        { "name": "Clicked Item", "type": "Slot", "notes": "" }
      ]
    },
    {
      "name": "Enchant Item",
      "id": 17,
      "state": "Play",
      "direction": "Server",
      "fields": [
        {
          "name": "Window ID",
          "type": "Byte",
          "notes": "The ID of the enchantment table window sent by Open Window"
        },
        {
          "name": "Enchantment",
          "type": "Byte",
          "notes": "The position of the enchantment on the enchantment table window, starting with 0 as the topmost one"
        }
      ]
    },
    {
      "name": "Update Sign",
      "id": 18,
      "state": "Play",
      "direction": "Server",
      "fields": [
        {
          "name": "Location",
          "type": "Position",
          "notes": "Block Coordinates"
        },
        {
          "name": "Line 1",
          "type": "Chat",
          "notes": "First line of text in the sign"
        },
        {
          "name": "Line 2",
          "type": "Chat",
          "notes": "Second line of text in the sign"
        },
        {
          "name": "Line 3",
          "type": "Chat",
          "notes": "Third line of text in the sign"
        },
        {
          "name": "Line 4",
          "type": "Chat",
          "notes": "Fourth line of text in the sign"
        }
      ]
    },
    {
      "name": "Player Abilities",
      "id": 19,
      "state": "Play",
      "direction": "Server",
      "fields": [
        {
          "name": "Flags",
          "type": "Byte",
          "notes": "Bit mask. 0x08: damage disabled (god mode), 0x04: can fly, 0x02: is flying, 0x01: is Creative"
        },
        { "name": "Flying Speed", "type": "Float", "notes": "" },
        { "name": "Walking Speed", "type": "Float", "notes": "" }
      ]
    },
    {
      "name": "Tab-Complete",
      "id": 20,
      "state": "Play",
      "direction": "Server",
      "fields": [
        {
          "name": "Text",
          "type": "String",
          "notes": "All text behind the cursor"
        },
        { "name": "Has Position", "type": "Boolean", "notes": "" },
        {
          "name": "Looked At Block",
          "type": "Optional Position",
          "notes": "The position of the block being looked at. Only sent if Has Position is true."
        }
      ]
    },
    {
      "name": "Client Settings",
      "id": 21,
      "state": "Play",
      "direction": "Server",
      "fields": [
        { "name": "Locale", "type": "String", "notes": "e.g. en_GB" },
        {
          "name": "View Distance",
          "type": "Byte",
          "notes": "Client-side render distance, in chunks"
        },
        {
          "name": "Chat Mode",
          "type": "Byte",
          "notes": "0: enabled, 1: commands only, 2: hidden"
        },
        {
          "name": "Chat Colors",
          "type": "Boolean",
          "notes": "“Colors” multiplayer setting"
        },
        {
          "name": "Displayed Skin Parts",
          "type": "Unsigned Byte",
          "notes": "Skin parts, see note below"
        }
      ]
    },
    {
      "name": "Client Status",
      "id": 22,
      "state": "Play",
      "direction": "Server",
      "fields": [
        { "name": "Action ID", "type": "VarInt", "notes": "See below" }
      ]
    },
    {
      "name": "Plugin Message",
      "id": 23,
      "state": "Play",
      "direction": "Server",
      "fields": [
        {
          "name": "Channel",
          "type": "String",
          "notes": "Name of the plugin channel used to send the data"
        },
        {
          "name": "Data",
          "type": "Byte Array",
          "notes": "Any data, depending on the channel. MC| channels are documented here."
        }
      ]
    },
    {
      "name": "Spectate",
      "id": 24,
      "state": "Play",
      "direction": "Server",
      "fields": [
        {
          "name": "Target Player",
          "type": "UUID",
          "notes": "UUID of the player to teleport to (can also be an entity UUID)"
        }
      ]
    },
    {
      "name": "Resource Pack Status",
      "id": 25,
      "state": "Play",
      "direction": "Server",
      "fields": [
        {
          "name": "Hash",
          "type": "String",
          "notes": "The hash sent in the Resource Pack Send packet."
        },
        {
          "name": "Result",
          "type": "VarInt",
          "notes": "0: successfully loaded, 1: declined, 2: failed download, 3: accepted"
        }
      ]
    },
    {
      "name": "Request",
      "id": 0,
      "state": "Status",
      "direction": "Server",
      "fields": []
    },
    {
      "name": "Ping",
      "id": 1,
      "state": "Status",
      "direction": "Server",
      "fields": [
        {
          "name": "Payload",
          "type": "Long",
          "notes": "May be any number. Notchian clients use a system-dependent time value which is counted in milliseconds."
        }
      ]
    },
    {
      "name": "Login Start",
      "id": 0,
      "state": "Login",
      "direction": "Server",
      "fields": [{ "name": "Name", "type": "String", "notes": "" }]
    },
    {
      "name": "Encryption Response",
      "id": 1,
      "state": "Login",
      "direction": "Server",
      "fields": [
        {
          "name": "Shared Secret Length",
          "type": "VarInt",
          "notes": "Length of Shared Secret"
        },
        { "name": "Shared Secret", "type": "Byte Array", "notes": "" },
        {
          "name": "Verify Token Length",
          "type": "VarInt",
          "notes": "Length of Verify Token"
        },
        { "name": "Verify Token", "type": "Byte Array", "notes": "" }
      ]
    }
  ],
  "clientboundPackets": [
    {
      "name": "Keep Alive",
      "id": 0,
      "state": "Play",
      "direction": "Client",
      "fields": [{ "name": "Keep Alive ID", "type": "VarInt", "notes": "" }]
    },
    {
      "name": "Join Game",
      "id": 1,
      "state": "Play",
      "direction": "Client",
      "fields": [
        {
          "name": "Entity ID",
          "type": "Int",
          "notes": "The player's Entity ID (EID)"
        },
        {
          "name": "Gamemode",
          "type": "Unsigned Byte",
          "notes": "0: Survival, 1: Creative, 2: Adventure, 3: Spectator. Bit 3 (0x8) is the hardcore flag."
        },
        {
          "name": "Dimension",
          "type": "Byte",
          "notes": "-1: Nether, 0: Overworld, 1: End"
        },
        {
          "name": "Difficulty",
          "type": "Unsigned Byte",
          "notes": "0: peaceful, 1: easy, 2: normal, 3: hard"
        },
        {
          "name": "Max Players",
          "type": "Unsigned Byte",
          "notes": "Used by the client to draw the player list"
        },
        {
          "name": "Level Type",
          "type": "String",
          "notes": "default, flat, largeBiomes, amplified, default_1_1"
        },
        {
          "name": "Reduced Debug Info",
          "type": "Boolean",
          "notes": "If true, a Notchian client shows reduced information on the debug screen."
        }
      ]
    },
    {
      "name": "Chat Message",
      "id": 2,
      "state": "Play",
      "direction": "Client",
      "fields": [
        {
          "name": "JSON Data",
          "type": "Chat",
          "notes": "Limited to 32767 bytes"
        },
        {
          "name": "Position",
          "type": "Byte",
          "notes": "0: chat (chat box), 1: system message (chat box), 2: above hotbar"
        }
      ]
    },
    {
      "name": "Time Update",
      "id": 3,
      "state": "Play",
      "direction": "Client",
      "fields": [
        {
          "name": "World Age",
          "type": "Long",
          "notes": "In ticks; not changed by server commands"
        },
        {
          "name": "Time of day",
          "type": "Long",
          "notes": "The world (or region) time, in ticks. If negative the sun will stop moving at the Math.abs of the time"
        }
      ]
    },
    {
      "name": "Entity Equipment",
      "id": 4,
      "state": "Play",
      "direction": "Client",
      "fields": [
        { "name": "Entity ID", "type": "VarInt", "notes": "Entity's EID" },
        {
          "name": "Slot",
          "type": "Short",
          "notes": "Equipment slot. 0: held, 1–4: armor slot (1: boots, 2: leggings, 3: chestplate, 4: helmet)"
        },
        { "name": "Item", "type": "Slot", "notes": "Item in slot format" }
      ]
    },
    {
      "name": "Spawn Position",
      "id": 5,
      "state": "Play",
      "direction": "Client",
      "fields": [
        { "name": "Location", "type": "Position", "notes": "Spawn location" }
      ]
    },
    {
      "name": "Update Health",
      "id": 6,
      "state": "Play",
      "direction": "Client",
      "fields": [
        {
          "name": "Health",
          "type": "Float",
          "notes": "0 or less = dead, 20 = full HP"
        },
        { "name": "Food", "type": "VarInt", "notes": "0–20" },
        {
          "name": "Food Saturation",
          "type": "Float",
          "notes": "Seems to vary from 0.0 to 5.0 in integer increments"
        }
      ]
    },
    {
      "name": "Respawn",
      "id": 7,
      "state": "Play",
      "direction": "Client",
      "fields": [
        {
          "name": "Dimension",
          "type": "Int",
          "notes": "-1: The Nether, 0: The Overworld, 1: The End"
        },
        {
          "name": "Difficulty",
          "type": "Unsigned Byte",
          "notes": "0: Peaceful, 1: Easy, 2: Normal, 3: Hard"
        },
        {
          "name": "Gamemode",
          "type": "Unsigned Byte",
          "notes": "0: survival, 1: creative, 2: adventure. The hardcore flag is not included"
        },
        { "name": "Level Type", "type": "String", "notes": "Same as Join Game" }
      ]
    },
    {
      "name": "Player Position And Look",
      "id": 8,
      "state": "Play",
      "direction": "Client",
      "fields": [
        {
          "name": "X",
          "type": "Double",
          "notes": "Absolute or relative position, depending on Flags"
        },
        {
          "name": "Y",
          "type": "Double",
          "notes": "Absolute or relative position, depending on Flags"
        },
        {
          "name": "Z",
          "type": "Double",
          "notes": "Absolute or relative position, depending on Flags"
        },
        {
          "name": "Yaw",
          "type": "Float",
          "notes": "Absolute or relative rotation on the X Axis, in degrees"
        },
        {
          "name": "Pitch",
          "type": "Float",
          "notes": "Absolute or relative rotation on the Y Axis, in degrees"
        },
        { "name": "Flags", "type": "Byte", "notes": "Bit field, see below" }
      ]
    },
    {
      "name": "Held Item Change",
      "id": 9,
      "state": "Play",
      "direction": "Client",
      "fields": [
        {
          "name": "Slot",
          "type": "Byte",
          "notes": "The slot which the player has selected (0–8)"
        }
      ]
    },
    {
      "name": "Use Bed",
      "id": 10,
      "state": "Play",
      "direction": "Client",
      "fields": [
        {
          "name": "Entity ID",
          "type": "VarInt",
          "notes": "Sleeping player's EID"
        },
        {
          "name": "Location",
          "type": "Position",
          "notes": "Block location of the head part of the bed"
        }
      ]
    },
    {
      "name": "Animation",
      "id": 11,
      "state": "Play",
      "direction": "Client",
      "fields": [
        { "name": "Entity ID", "type": "VarInt", "notes": "Player ID" },
        {
          "name": "Animation",
          "type": "Unsigned Byte",
          "notes": "Animation ID (see below)"
        }
      ]
    },
    {
      "name": "Spawn Player",
      "id": 12,
      "state": "Play",
      "direction": "Client",
      "fields": [
        { "name": "Entity ID", "type": "VarInt", "notes": "Player's EID" },
        { "name": "Player UUID", "type": "UUID", "notes": "" },
        {
          "name": "X",
          "type": "Int",
          "notes": "Player X as a Fixed-Point number"
        },
        {
          "name": "Y",
          "type": "Int",
          "notes": "Player Y as a Fixed-Point number"
        },
        {
          "name": "Z",
          "type": "Int",
          "notes": "Player Z as a Fixed-Point number"
        },
        { "name": "Yaw", "type": "Angle", "notes": "" },
        { "name": "Pitch", "type": "Angle", "notes": "" },
        {
          "name": "Current Item",
          "type": "Short",
          "notes": "The item the player is currently holding. Note that this should be 0 for “no item”, unlike -1 used in other packets."
        },
        { "name": "Metadata", "type": "Metadata", "notes": "" }
      ]
    },
    {
      "name": "Collect Item",
      "id": 13,
      "state": "Play",
      "direction": "Client",
      "fields": [
        { "name": "Collected Entity ID", "type": "VarInt", "notes": "" },
        { "name": "Collector Entity ID", "type": "VarInt", "notes": "" }
      ]
    },
    {
      "name": "Spawn Object",
      "id": 14,
      "state": "Play",
      "direction": "Client",
      "fields": [
        { "name": "Entity ID", "type": "VarInt", "notes": "EID of the object" },
        {
          "name": "Type",
          "type": "Byte",
          "notes": "The type of object (see Entities#Objects)"
        },
        {
          "name": "X",
          "type": "Int",
          "notes": "X position as a Fixed-Point number"
        },
        {
          "name": "Y",
          "type": "Int",
          "notes": "Y position as a Fixed-Point number"
        },
        {
          "name": "Z",
          "type": "Int",
          "notes": "Z position as a Fixed-Point number"
        },
        { "name": "Pitch", "type": "Angle", "notes": "" },
        { "name": "Yaw", "type": "Angle", "notes": "" },
        {
          "name": "Data",
          "type": "Int",
          "notes": "Meaning dependent on the value of the Type field, see Object Data for details."
        },
        {
          "name": "Velocity X",
          "type": "Optional Short",
          "notes": "Only sent if the Data field is nonzero. Same units as Entity Velocity."
        },
        {
          "name": "Velocity Y",
          "type": "Optional Short",
          "notes": "Only sent if the Data field is nonzero. Same units as Entity Velocity."
        },
        {
          "name": "Velocity Z",
          "type": "Optional Short",
          "notes": "Only sent if the Data field is nonzero. Same units as Entity Velocity."
        }
      ]
    },
    {
      "name": "Spawn Mob",
      "id": 15,
      "state": "Play",
      "direction": "Client",
      "fields": [
        { "name": "Entity ID", "type": "VarInt", "notes": "" },
        {
          "name": "Type",
          "type": "Unsigned Byte",
          "notes": "The type of mob. See Mobs"
        },
        {
          "name": "X",
          "type": "Int",
          "notes": "X position as a Fixed-Point number"
        },
        {
          "name": "Y",
          "type": "Int",
          "notes": "Y position as a Fixed-Point number"
        },
        {
          "name": "Z",
          "type": "Int",
          "notes": "Z position as a Fixed-Point number"
        },
        { "name": "Yaw", "type": "Angle", "notes": "" },
        { "name": "Pitch", "type": "Angle", "notes": "" },
        { "name": "Head Pitch", "type": "Angle", "notes": "" },
        {
          "name": "Velocity X",
          "type": "Short",
          "notes": "Same units as Entity Velocity"
        },
        {
          "name": "Velocity Y",
          "type": "Short",
          "notes": "Same units as Entity Velocity"
        },
        {
          "name": "Velocity Z",
          "type": "Short",
          "notes": "Same units as Entity Velocity"
        },
        { "name": "Metadata", "type": "Metadata", "notes": "" }
      ]
    },
    {
      "name": "Spawn Painting",
      "id": 16,
      "state": "Play",
      "direction": "Client",
      "fields": [
        { "name": "Entity ID", "type": "VarInt", "notes": "" },
        {
          "name": "Title",
          "type": "String",
          "notes": "Name of the painting. Max length 13"
        },
        {
          "name": "Location",
          "type": "Position",
          "notes": "Center coordinates"
        },
        {
          "name": "Direction",
          "type": "Unsigned Byte",
          "notes": "Direction the painting faces. 0: north (-z), 1: west (-x), 2: south (+z), 3: east (+x)"
        }
      ]
    },
    {
      "name": "Spawn Experience Orb",
      "id": 17,
      "state": "Play",
      "direction": "Client",
      "fields": [
        { "name": "Entity ID", "type": "VarInt", "notes": "Entity's ID" },
        {
          "name": "X",
          "type": "Int",
          "notes": "X position as a Fixed-Point number"
        },
        {
          "name": "Y",
          "type": "Int",
          "notes": "Y position as a Fixed-Point number"
        },
        {
          "name": "Z",
          "type": "Int",
          "notes": "Z position as a Fixed-Point number"
        },
        {
          "name": "Count",
          "type": "Short",
          "notes": "The amount of experience this orb will reward once collected"
        }
      ]
    },
    {
      "name": "Entity Velocity",
      "id": 18,
      "state": "Play",
      "direction": "Client",
      "fields": [
        { "name": "Entity ID", "type": "VarInt", "notes": "" },
        {
          "name": "Velocity X",
          "type": "Short",
          "notes": "Velocity on the X axis"
        },
        {
          "name": "Velocity Y",
          "type": "Short",
          "notes": "Velocity on the Y axis"
        },
        {
          "name": "Velocity Z",
          "type": "Short",
          "notes": "Velocity on the Z axis"
        }
      ]
    },
    {
      "name": "Destroy Entities",
      "id": 19,
      "state": "Play",
      "direction": "Client",
      "fields": [
        {
          "name": "Count",
          "type": "VarInt",
          "notes": "Number of elements in the following array"
        },
        {
          "name": "Entity IDs",
          "type": "Array of VarInt",
          "notes": "The list of entities of destroy"
        }
      ]
    },
    {
      "name": "Entity",
      "id": 20,
      "state": "Play",
      "direction": "Client",
      "fields": [{ "name": "Entity ID", "type": "VarInt", "notes": "" }]
    },
    {
      "name": "Entity Relative Move",
      "id": 21,
      "state": "Play",
      "direction": "Client",
      "fields": [
        { "name": "Entity ID", "type": "VarInt", "notes": "" },
        {
          "name": "Delta X",
          "type": "Byte",
          "notes": "Change in X position as a Fixed-Point number"
        },
        {
          "name": "Delta Y",
          "type": "Byte",
          "notes": "Change in Y position as a Fixed-Point number"
        },
        {
          "name": "Delta Z",
          "type": "Byte",
          "notes": "Change in Z position as a Fixed-Point number"
        },
        { "name": "On Ground", "type": "Boolean", "notes": "" }
      ]
    },
    {
      "name": "Entity Look",
      "id": 22,
      "state": "Play",
      "direction": "Client",
      "fields": [
        { "name": "Entity ID", "type": "VarInt", "notes": "" },
        { "name": "Yaw", "type": "Angle", "notes": "New angle, not a delta" },
        { "name": "Pitch", "type": "Angle", "notes": "New angle, not a delta" },
        { "name": "On Ground", "type": "Boolean", "notes": "" }
      ]
    },
    {
      "name": "Entity Look And Relative Move",
      "id": 23,
      "state": "Play",
      "direction": "Client",
      "fields": [
        { "name": "Entity ID", "type": "VarInt", "notes": "" },
        {
          "name": "Delta X",
          "type": "Byte",
          "notes": "Change in X position as a Fixed-Point number"
        },
        {
          "name": "Delta Y",
          "type": "Byte",
          "notes": "Change in Y position as a Fixed-Point number"
        },
        {
          "name": "Delta Z",
          "type": "Byte",
          "notes": "Change in Z position as a Fixed-Point number"
        },
        { "name": "Yaw", "type": "Angle", "notes": "New angle, not a delta" },
        { "name": "Pitch", "type": "Angle", "notes": "New angle, not a delta" },
        { "name": "On Ground", "type": "Boolean", "notes": "" }
      ]
    },
    {
      "name": "Entity Teleport",
      "id": 24,
      "state": "Play",
      "direction": "Client",
      "fields": [
        { "name": "Entity ID", "type": "VarInt", "notes": "" },
        {
          "name": "X",
          "type": "Int",
          "notes": "X position as a Fixed-Point number"
        },
        {
          "name": "Y",
          "type": "Int",
          "notes": "Y position as a Fixed-Point number"
        },
        {
          "name": "Z",
          "type": "Int",
          "notes": "Z position as a Fixed-Point number"
        },
        { "name": "Yaw", "type": "Angle", "notes": "New angle, not a delta" },
        { "name": "Pitch", "type": "Angle", "notes": "New angle, not a delta" },
        { "name": "On Ground", "type": "Boolean", "notes": "" }
      ]
    },
    {
      "name": "Entity Head Look",
      "id": 25,
      "state": "Play",
      "direction": "Client",
      "fields": [
        { "name": "Entity ID", "type": "VarInt", "notes": "" },
        {
          "name": "Head Yaw",
          "type": "Angle",
          "notes": "New angle, not a delta"
        }
      ]
    },
    {
      "name": "Entity Status",
      "id": 26,
      "state": "Play",
      "direction": "Client",
      "fields": [
        { "name": "Entity ID", "type": "Int", "notes": "" },
        { "name": "Entity Status", "type": "Byte", "notes": "See below" }
      ]
    },
    {
      "name": "Attach Entity",
      "id": 27,
      "state": "Play",
      "direction": "Client",
      "fields": [
        {
          "name": "Entity ID",
          "type": "Int",
          "notes": "Attached entity's EID"
        },
        {
          "name": "Vehicle ID",
          "type": "Int",
          "notes": "Vechicle's Entity ID. Set to -1 to detach"
        },
        {
          "name": "Leash",
          "type": "Boolean",
          "notes": "If true leashes the entity to the vehicle"
        }
      ]
    },
    {
      "name": "Entity Metadata",
      "id": 28,
      "state": "Play",
      "direction": "Client",
      "fields": [
        { "name": "Entity ID", "type": "VarInt", "notes": "" },
        { "name": "Metadata", "type": "Metadata", "notes": "" }
      ]
    },
    {
      "name": "Entity Effect",
      "id": 29,
      "state": "Play",
      "direction": "Client",
      "fields": [
        { "name": "Entity ID", "type": "VarInt", "notes": "" },
        { "name": "Effect ID", "type": "Byte", "notes": "See this table" },
        {
          "name": "Amplifier",
          "type": "Byte",
          "notes": "Notchian client displays effect level as Amplifier + 1"
        },
        { "name": "Duration", "type": "VarInt", "notes": "Seconds" },
        { "name": "Hide Particles", "type": "Boolean", "notes": "" }
      ]
    },
    {
      "name": "Remove Entity Effect",
      "id": 30,
      "state": "Play",
      "direction": "Client",
      "fields": [
        { "name": "Entity ID", "type": "VarInt", "notes": "" },
        { "name": "Effect ID", "type": "Byte", "notes": "See this table" }
      ]
    },
    {
      "name": "Set Experience",
      "id": 31,
      "state": "Play",
      "direction": "Client",
      "fields": [
        {
          "name": "Experience bar",
          "type": "Float",
          "notes": "Between 0 and 1"
        },
        { "name": "Level", "type": "VarInt", "notes": "" },
        {
          "name": "Total Experience",
          "type": "VarInt",
          "notes": "See Experience#Leveling up on the Minecraft Wiki for Total Experience to Level conversion"
        }
      ]
    },
    {
      "name": "Entity Properties",
      "id": 32,
      "state": "Play",
      "direction": "Client",
      "fields": [
        { "name": "Entity ID", "type": "VarInt", "notes": "" },
        {
          "name": "Number Of Properties",
          "type": "Int",
          "notes": "Number of elements in the following array"
        },
        { "name": "Property", "type": "Key", "notes": "Array" },
        { "name": "Value", "type": "Double", "notes": "See below" },
        {
          "name": "Number Of Modifiers",
          "type": "VarInt",
          "notes": "Number of elements in the following array"
        },
        {
          "name": "Modifiers",
          "type": "Array of Modifier Data",
          "notes": "See Attribute#Modifiers"
        }
      ]
    },
    {
      "name": "Chunk Data",
      "id": 33,
      "state": "Play",
      "direction": "Client",
      "fields": [
        { "name": "Chunk X", "type": "Int", "notes": "Chunk X coordinate" },
        { "name": "Chunk Z", "type": "Int", "notes": "Chunk Z coordinate" },
        {
          "name": "Ground-Up Continuous",
          "type": "Boolean",
          "notes": "This is true if the packet represents all sections in this vertical column, where the Primary Bit Mask specifies exactly which sections are included, and which are air"
        },
        {
          "name": "Primary Bit Mask",
          "type": "Unsigned Short",
          "notes": "Bitmask with 1 for every 16x16x16 section whose data follows in the compressed data"
        },
        { "name": "Size", "type": "VarInt", "notes": "Size of Data" },
        { "name": "Data", "type": "Chunk", "notes": "" }
      ]
    },
    {
      "name": "Multi Block Change",
      "id": 34,
      "state": "Play",
      "direction": "Client",
      "fields": [
        { "name": "Chunk X", "type": "Int", "notes": "Chunk X coordinate" },
        { "name": "Chunk Z", "type": "Int", "notes": "Chunk Z coordinate" },
        {
          "name": "Record Count",
          "type": "VarInt",
          "notes": "Number of elements in the following array, i.e. the number of blocks affected"
        },
        { "name": "Record", "type": "Horizontal Position", "notes": "Array" },
        { "name": "Y Coordinate", "type": "Unsigned Byte", "notes": "" },
        {
          "name": "Block ID",
          "type": "VarInt",
          "notes": "The new block state ID for the block as given in the global palette (When reading data: type = id >> 4, meta = id & 15, when writing data: id = type << 4 | (meta & 15))"
        }
      ]
    },
    {
      "name": "Block Change",
      "id": 35,
      "state": "Play",
      "direction": "Client",
      "fields": [
        {
          "name": "Location",
          "type": "Position",
          "notes": "Block Coordinates"
        },
        {
          "name": "Block ID",
          "type": "VarInt",
          "notes": "The new block state ID for the block as given in the global palette (When reading data: type = id >> 4, meta = id & 15, when writing data: id = type << 4 | (meta & 15))"
        }
      ]
    },
    {
      "name": "Block Action",
      "id": 36,
      "state": "Play",
      "direction": "Client",
      "fields": [
        {
          "name": "Location",
          "type": "Position",
          "notes": "Block coordinates"
        },
        {
          "name": "Byte 1",
          "type": "Unsigned Byte",
          "notes": "Varies depending on block — see Block Actions"
        },
        {
          "name": "Byte 2",
          "type": "Unsigned Byte",
          "notes": "Varies depending on block — see Block Actions"
        },
        {
          "name": "Block Type",
          "type": "VarInt",
          "notes": "The block type ID for the block, not including metadata/damage value"
        }
      ]
    },
    {
      "name": "Block Break Animation",
      "id": 37,
      "state": "Play",
      "direction": "Client",
      "fields": [
        {
          "name": "Entity ID",
          "type": "VarInt",
          "notes": "EID for the animation"
        },
        { "name": "Location", "type": "Position", "notes": "Block Position" },
        {
          "name": "Destroy Stage",
          "type": "Byte",
          "notes": "0–9 to set it, any other value to remove it"
        }
      ]
    },
    {
      "name": "Map Chunk Bulk",
      "id": 38,
      "state": "Play",
      "direction": "Client",
      "fields": [
        {
          "name": "Sky Light Sent",
          "type": "Boolean",
          "notes": "Whether or not Chunk Data contains light nibble arrays. This is true in the Overworld, false in the End + Nether"
        },
        {
          "name": "Chunk Column Count",
          "type": "VarInt",
          "notes": "Number of elements in each of the following arrays"
        },
        { "name": "Chunk Meta", "type": "Chunk X", "notes": "Array" },
        {
          "name": "Chunk Z",
          "type": "Int",
          "notes": "The Z coordinate of the chunk"
        },
        {
          "name": "Primary Bit Mask",
          "type": "Unsigned Short",
          "notes": "A bit mask which specifies which sections are not empty in this chunk"
        },
        {
          "name": "Chunk Data",
          "type": "Array of Chunk",
          "notes": "Each chunk in this array corresponds to the data at the same position in Chunk Meta"
        }
      ]
    },
    {
      "name": "Explosion",
      "id": 39,
      "state": "Play",
      "direction": "Client",
      "fields": [
        { "name": "X", "type": "Float", "notes": "" },
        { "name": "Y", "type": "Float", "notes": "" },
        { "name": "Z", "type": "Float", "notes": "" },
        {
          "name": "Radius",
          "type": "Float",
          "notes": "Currently unused in the client"
        },
        {
          "name": "Record Count",
          "type": "Int",
          "notes": "Number of elements in the following array"
        },
        {
          "name": "Records",
          "type": "Array of (Byte, Byte, Byte)",
          "notes": "Each record is 3 signed bytes long, each bytes are the XYZ (respectively) offsets of affected blocks."
        },
        {
          "name": "Player Motion X",
          "type": "Float",
          "notes": "X velocity of the player being pushed by the explosion"
        },
        {
          "name": "Player Motion Y",
          "type": "Float",
          "notes": "Y velocity of the player being pushed by the explosion"
        },
        {
          "name": "Player Motion Z",
          "type": "Float",
          "notes": "Z velocity of the player being pushed by the explosion"
        }
      ]
    },
    {
      "name": "Effect",
      "id": 40,
      "state": "Play",
      "direction": "Client",
      "fields": [
        {
          "name": "Effect ID",
          "type": "Int",
          "notes": "The ID of the effect, see below"
        },
        {
          "name": "Location",
          "type": "Position",
          "notes": "The location of the effect"
        },
        {
          "name": "Data",
          "type": "Int",
          "notes": "Extra data for certain effects, see below"
        },
        {
          "name": "Disable Relative Volume",
          "type": "Boolean",
          "notes": "See above"
        }
      ]
    },
    {
      "name": "Sound Effect",
      "id": 41,
      "state": "Play",
      "direction": "Client",
      "fields": [
        {
          "name": "Sound name",
          "type": "String",
          "notes": "All known sound effect names can be seen here"
        },
        {
          "name": "Effect position X",
          "type": "Int",
          "notes": "Effect X multiplied by 8"
        },
        {
          "name": "Effect position Y",
          "type": "Int",
          "notes": "Effect Y multiplied by 8"
        },
        {
          "name": "Effect position Z",
          "type": "Int",
          "notes": "Effect Z multiplied by 8"
        },
        {
          "name": "Volume",
          "type": "Float",
          "notes": "1 is 100%, can be more"
        },
        {
          "name": "Pitch",
          "type": "Unsigned Byte",
          "notes": "63 is 100%, can be more"
        }
      ]
    },
    {
      "name": "Particle",
      "id": 42,
      "state": "Play",
      "direction": "Client",
      "fields": [
        { "name": "Particle ID", "type": "Int", "notes": "See below" },
        {
          "name": "Long Distance",
          "type": "Boolean",
          "notes": "If true, particle distance increases from 256 to 65536"
        },
        { "name": "X", "type": "Float", "notes": "X position of the particle" },
        { "name": "Y", "type": "Float", "notes": "Y position of the particle" },
        { "name": "Z", "type": "Float", "notes": "Z position of the particle" },
        {
          "name": "Offset X",
          "type": "Float",
          "notes": "This is added to the X position after being multiplied by random.nextGaussian()"
        },
        {
          "name": "Offset Y",
          "type": "Float",
          "notes": "This is added to the Y position after being multiplied by random.nextGaussian()"
        },
        {
          "name": "Offset Z",
          "type": "Float",
          "notes": "This is added to the Z position after being multiplied by random.nextGaussian()"
        },
        {
          "name": "Particle Data",
          "type": "Float",
          "notes": "The data of each particle"
        },
        {
          "name": "Particle Count",
          "type": "Int",
          "notes": "The number of particles to create"
        },
        {
          "name": "Data",
          "type": "Array of VarInt",
          "notes": "Length depends on particle. \"iconcrack\" has length of 2, \"blockcrack\", and \"blockdust\" have lengths of 1, the rest have 0."
        }
      ]
    },
    {
      "name": "Change Game State",
      "id": 43,
      "state": "Play",
      "direction": "Client",
      "fields": [
        { "name": "Reason", "type": "Unsigned Byte", "notes": "See below" },
        { "name": "Value", "type": "Float", "notes": "Depends on Reason" }
      ]
    },
    {
      "name": "Spawn Global Entity",
      "id": 44,
      "state": "Play",
      "direction": "Client",
      "fields": [
        {
          "name": "Entity ID",
          "type": "VarInt",
          "notes": "The EID of the thunderbolt"
        },
        {
          "name": "Type",
          "type": "Byte",
          "notes": "The global entity type, currently always 1 for thunderbolt"
        },
        {
          "name": "X",
          "type": "Int",
          "notes": "Thunderbolt X, a fixed-point number"
        },
        {
          "name": "Y",
          "type": "Int",
          "notes": "Thunderbolt Y, a fixed-point number"
        },
        {
          "name": "Z",
          "type": "Int",
          "notes": "Thunderbolt Z, a fixed-point number"
        }
      ]
    },
    {
      "name": "Open Window",
      "id": 45,
      "state": "Play",
      "direction": "Client",
      "fields": [
        {
          "name": "Window ID",
          "type": "Unsigned Byte",
          "notes": "A unique id number for the window to be displayed. Notchian server implementation is a counter, starting at 1."
        },
        {
          "name": "Window Type",
          "type": "String",
          "notes": "The window type to use for display. See Inventory for a list."
        },
        {
          "name": "Window Title",
          "type": "Chat",
          "notes": "The title of the window"
        },
        {
          "name": "Number Of Slots",
          "type": "Unsigned Byte",
          "notes": "Number of slots in the window (excluding the number of slots in the player inventory)"
        },
        {
          "name": "Entity ID",
          "type": "Optional Int",
          "notes": "EntityHorse's EID. Only sent when Window Type is “EntityHorse”"
        }
      ]
    },
    {
      "name": "Close Window",
      "id": 46,
      "state": "Play",
      "direction": "Client",
      "fields": [
        {
          "name": "Window ID",
          "type": "Unsigned Byte",
          "notes": "This is the ID of the window that was closed. 0 for inventory."
        }
      ]
    },
    {
      "name": "Set Slot",
      "id": 47,
      "state": "Play",
      "direction": "Client",
      "fields": [
        {
          "name": "Window ID",
          "type": "Byte",
          "notes": "The window which is being updated. 0 for player inventory. Note that all known window types include the player inventory. This packet will only be sent for the currently opened window while the player is performing actions, even if it affects the player inventory. After the window is closed, a number of these packets are sent to update the player's inventory window (0)."
        },
        {
          "name": "Slot",
          "type": "Short",
          "notes": "The slot that should be updated"
        },
        { "name": "Slot Data", "type": "Slot", "notes": "" }
      ]
    },
    {
      "name": "Window Items",
      "id": 48,
      "state": "Play",
      "direction": "Client",
      "fields": [
        {
          "name": "Window ID",
          "type": "Unsigned Byte",
          "notes": "The ID of window which items are being sent for. 0 for player inventory."
        },
        {
          "name": "Count",
          "type": "Short",
          "notes": "Number of elements in the following array"
        },
        { "name": "Slot Data", "type": "Array of Slot", "notes": "" }
      ]
    },
    {
      "name": "Window Property",
      "id": 49,
      "state": "Play",
      "direction": "Client",
      "fields": [
        { "name": "Window ID", "type": "Unsigned Byte", "notes": "" },
        {
          "name": "Property",
          "type": "Short",
          "notes": "The property to be updated, see below"
        },
        {
          "name": "Value",
          "type": "Short",
          "notes": "The new value for the property, see below"
        }
      ]
    },
    {
      "name": "Confirm Transaction",
      "id": 50,
      "state": "Play",
      "direction": "Client",
      "fields": [
        {
          "name": "Window ID",
          "type": "Byte",
          "notes": "The ID of the window that the action occurred in"
        },
        {
          "name": "Action Number",
          "type": "Short",
          "notes": "Every action that is to be accepted has a unique number. This field corresponds to that number."
        },
        {
          "name": "Accepted",
          "type": "Boolean",
          "notes": "Whether the action was accepted"
        }
      ]
    },
    {
      "name": "Update Sign",
      "id": 51,
      "state": "Play",
      "direction": "Client",
      "fields": [
        { "name": "Location", "type": "Position", "notes": "" },
        {
          "name": "Line 1",
          "type": "Chat",
          "notes": "First line of text in the sign"
        },
        {
          "name": "Line 2",
          "type": "Chat",
          "notes": "Second line of text in the sign"
        },
        {
          "name": "Line 3",
          "type": "Chat",
          "notes": "Third line of text in the sign"
        },
        {
          "name": "Line 4",
          "type": "Chat",
          "notes": "Fourth line of text in the sign"
        }
      ]
    },
    {
      "name": "Map",
      "id": 52,
      "state": "Play",
      "direction": "Client",
      "fields": [
        {
          "name": "Item Damage",
          "type": "VarInt",
          "notes": "The damage value (map ID) of the map being modified"
        },
        { "name": "Scale", "type": "Byte", "notes": "" },
        {
          "name": "Icon Count",
          "type": "VarInt",
          "notes": "Number of elements in the following array"
        },
        { "name": "Icon", "type": "Direction And Type", "notes": "Array" },
        { "name": "X", "type": "Byte", "notes": "" },
        { "name": "Z", "type": "Byte", "notes": "" },
        {
          "name": "Columns",
          "type": "Byte",
          "notes": "Number of columns updated"
        },
        {
          "name": "Rows",
          "type": "Optional Byte",
          "notes": "Only if Columns is more than 0; number of rows updated"
        },
        {
          "name": "X",
          "type": "Optional Byte",
          "notes": "Only if Columns is more than 0; x offset of the westernmost column"
        },
        {
          "name": "Z",
          "type": "Optional Byte",
          "notes": "Only if Columns is more than 0; z offset of the northernmost row"
        },
        {
          "name": "Length",
          "type": "Optional VarInt",
          "notes": "Only if Columns is more than 0; length of the following array"
        },
        {
          "name": "Data",
          "type": "Optional Array of Unsigned Byte",
          "notes": "Only if Columns is more than 0; see Map item format"
        }
      ]
    },
    {
      "name": "Update Block Entity",
      "id": 53,
      "state": "Play",
      "direction": "Client",
      "fields": [
        { "name": "Location", "type": "Position", "notes": "" },
        {
          "name": "Action",
          "type": "Unsigned Byte",
          "notes": "The type of update to perform, see below"
        },
        {
          "name": "NBT Data",
          "type": "Optional NBT Tag",
          "notes": "If not present then it's a TAG_END (0)"
        }
      ]
    },
    {
      "name": "Open Sign Editor",
      "id": 54,
      "state": "Play",
      "direction": "Client",
      "fields": [{ "name": "Location", "type": "Position", "notes": "" }]
    },
    {
      "name": "Statistics",
      "id": 55,
      "state": "Play",
      "direction": "Client",
      "fields": [
        {
          "name": "Count",
          "type": "VarInt",
          "notes": "Number of elements in the following array"
        },
        { "name": "Statistic", "type": "Name", "notes": "Array" },
        {
          "name": "Value",
          "type": "VarInt",
          "notes": "The amount to set it to"
        }
      ]
    },
    {
      "name": "Player List Item",
      "id": 56,
      "state": "Play",
      "direction": "Client",
      "fields": [
        {
          "name": "Action",
          "type": "VarInt",
          "notes": "Determines the rest of the Player format after the UUID"
        },
        {
          "name": "Number Of Players",
          "type": "VarInt",
          "notes": "Number of elements in the following array"
        },
        { "name": "Player", "type": "UUID", "notes": "Array" },
        { "name": "Action", "type": "Field Name", "notes": "" },
        { "name": "0: add player", "type": "Name", "notes": "String" },
        {
          "name": "Number Of Properties",
          "type": "VarInt",
          "notes": "Number of elements in the following array"
        },
        { "name": "Property", "type": "Name", "notes": "Array" },
        { "name": "Value", "type": "String", "notes": "" },
        { "name": "Is Signed", "type": "Boolean", "notes": "" },
        {
          "name": "Signature",
          "type": "Optional String",
          "notes": "Only if Is Signed is true"
        },
        { "name": "Gamemode", "type": "VarInt", "notes": "" },
        { "name": "Ping", "type": "VarInt", "notes": "" },
        { "name": "Has Display Name", "type": "Boolean", "notes": "" },
        {
          "name": "Display Name",
          "type": "Optional Chat",
          "notes": "Only if Has Display Name is true"
        },
        { "name": "1: update gamemode", "type": "Gamemode", "notes": "VarInt" },
        { "name": "2: update latency", "type": "Ping", "notes": "VarInt" },
        {
          "name": "3: update display name",
          "type": "Has Display Name",
          "notes": "Boolean"
        },
        {
          "name": "Display Name",
          "type": "Optional Chat",
          "notes": "Only send if Has Display Name is true"
        },
        {
          "name": "4: remove player",
          "type": "no fields",
          "notes": "no fields"
        }
      ]
    },
    {
      "name": "Player Abilities",
      "id": 57,
      "state": "Play",
      "direction": "Client",
      "fields": [
        { "name": "Flags", "type": "Byte", "notes": "Bit field, see below" },
        { "name": "Flying Speed", "type": "Float", "notes": "" },
        {
          "name": "Field of View Modifier",
          "type": "Float",
          "notes": "Modifies the field of view, like a speed potion. A Notchian server will use the same value as the movement speed (send in the Entity Properties packet)."
        }
      ]
    },
    {
      "name": "Tab-Complete",
      "id": 58,
      "state": "Play",
      "direction": "Client",
      "fields": [
        {
          "name": "Count",
          "type": "VarInt",
          "notes": "Number of elements in the following array"
        },
        {
          "name": "Matches",
          "type": "Array of String",
          "notes": "One eligible command, note that each command is sent separately instead of in a single string, hence the need for Count"
        }
      ]
    },
    {
      "name": "Scoreboard Objective",
      "id": 59,
      "state": "Play",
      "direction": "Client",
      "fields": [
        {
          "name": "Objective Name",
          "type": "String",
          "notes": "An unique name for the objective"
        },
        {
          "name": "Mode",
          "type": "Byte",
          "notes": "0 to create the scoreboard. 1 to remove the scoreboard. 2 to update the display text."
        },
        {
          "name": "Objective Value",
          "type": "Optional String",
          "notes": "Only if mode is 0 or 2. The text to be displayed for the score"
        },
        {
          "name": "Type",
          "type": "Optional String",
          "notes": "Only if mode is 0 or 2. “integer” or “hearts”"
        }
      ]
    },
    {
      "name": "Update Score",
      "id": 60,
      "state": "Play",
      "direction": "Client",
      "fields": [
        {
          "name": "Score Name",
          "type": "String",
          "notes": "The name of the score to be updated or removed"
        },
        {
          "name": "Action",
          "type": "Byte",
          "notes": "0 to create/update an item. 1 to remove an item."
        },
        {
          "name": "Objective Name",
          "type": "String",
          "notes": "The name of the objective the score belongs to"
        },
        {
          "name": "Value",
          "type": "Optional VarInt",
          "notes": "The score to be displayed next to the entry. Only sent when Action does not equal 1."
        }
      ]
    },
    {
      "name": "Display Scoreboard",
      "id": 61,
      "state": "Play",
      "direction": "Client",
      "fields": [
        {
          "name": "Position",
          "type": "Byte",
          "notes": "The position of the scoreboard. 0: list, 1: sidebar, 2: below name."
        },
        {
          "name": "Score Name",
          "type": "String",
          "notes": "The unique name for the scoreboard to be displayed."
        }
      ]
    },
    {
      "name": "Teams",
      "id": 62,
      "state": "Play",
      "direction": "Client",
      "fields": [
        {
          "name": "Team Name",
          "type": "String",
          "notes": "A unique name for the team. (Shared with scoreboard)."
        },
        {
          "name": "Mode",
          "type": "Byte",
          "notes": "If 0 then the team is created.\n\nIf 1 then the team is removed.\n\nIf 2 the team team information is updated.\n\nIf 3 then new players are added to the team.\n\nIf 4 then players are removed from the team."
        },
        {
          "name": "Team Display Name",
          "type": "Optional String",
          "notes": "Only if Mode = 0 or 2."
        },
        {
          "name": "Team Prefix",
          "type": "Optional String",
          "notes": "Only if Mode = 0 or 2. Displayed before the players' name that are part of this team"
        },
        {
          "name": "Team Suffix",
          "type": "Optional String",
          "notes": "Only if Mode = 0 or 2. Displayed after the players' name that are part of this team"
        },
        {
          "name": "Friendly Fire",
          "type": "Optional Byte",
          "notes": "Only if Mode = 0 or 2. 0 for off, 1 for on, 3 for seeing friendly invisibles"
        },
        {
          "name": "Name Tag Visibility",
          "type": "Optional String",
          "notes": "Only if Mode = 0 or 2. always, hideForOtherTeams, hideForOwnTeam, never"
        },
        {
          "name": "Color",
          "type": "Optional Byte",
          "notes": "Only if Mode = 0 or 2. Same as Chat colors"
        },
        {
          "name": "Player Count",
          "type": "Optional VarInt",
          "notes": "Only if Mode = 0 or 3 or 4. Number of players in the array"
        },
        {
          "name": "Players",
          "type": "Optional Array of String",
          "notes": "Only if Mode = 0 or 3 or 4. Players to be added/remove from the team. Max 40 characters so may be uuid's later"
        }
      ]
    },
    {
      "name": "Plugin Message",
      "id": 63,
      "state": "Play",
      "direction": "Client",
      "fields": [
        {
          "name": "Channel",
          "type": "String",
          "notes": "Name of the plugin channel used to send the data"
        },
        {
          "name": "Data",
          "type": "Byte Array",
          "notes": "Any data, depending on the channel. MC| channels are documented here."
        }
      ]
    },
    {
      "name": "Disconnect",
      "id": 64,
      "state": "Play",
      "direction": "Client",
      "fields": [
        {
          "name": "Reason",
          "type": "Chat",
          "notes": "Displayed to the client when the connection terminates."
        }
      ]
    },
    {
      "name": "Server Difficulty",
      "id": 65,
      "state": "Play",
      "direction": "Client",
      "fields": [
        {
          "name": "Difficulty",
          "type": "Unsigned Byte",
          "notes": "0: peaceful, 1: easy, 2: normal, 3: hard"
        }
      ]
    },
    {
      "name": "Combat Event",
      "id": 66,
      "state": "Play",
      "direction": "Client",
      "fields": [
        {
          "name": "Event",
          "type": "VarInt",
          "notes": "0: enter combat, 1: end combat, 2: entity dead"
        },
        {
          "name": "Duration",
          "type": "Optional VarInt",
          "notes": "Only for end combat"
        },
        {
          "name": "Player ID",
          "type": "Optional VarInt",
          "notes": "Only for entity dead"
        },
        {
          "name": "Entity ID",
          "type": "Optional Int",
          "notes": "Only for end combat and entity dead"
        },
        { "name": "Message", "type": "String", "notes": "Only for entity dead" }
      ]
    },
    {
      "name": "Camera",
      "id": 67,
      "state": "Play",
      "direction": "Client",
      "fields": [
        {
          "name": "Camera ID",
          "type": "VarInt",
          "notes": "ID of the entity to set the client's camera to"
        }
      ]
    },
    {
      "name": "World Border",
      "id": 68,
      "state": "Play",
      "direction": "Client",
      "fields": [
        {
          "name": "Action",
          "type": "VarInt",
          "notes": "Determines the format of the rest of the packet"
        },
        { "name": "Action", "type": "Field Name", "notes": "" },
        { "name": "0: set size", "type": "Radius", "notes": "Double" },
        { "name": "1: lerp size", "type": "Old Radius", "notes": "Double" },
        { "name": "New Radius", "type": "Double", "notes": "meters" },
        {
          "name": "Speed",
          "type": "VarLong",
          "notes": "number of real-time ticks/seconds (?) until New Radius is reached. From experiments, it appears that Notchian server does not sync world border speed to game ticks, so it gets out of sync with server lag"
        },
        { "name": "2: set center", "type": "X", "notes": "Double" },
        { "name": "Z", "type": "Double", "notes": "" },
        { "name": "3: initialize", "type": "X", "notes": "Double" },
        { "name": "Z", "type": "Double", "notes": "" },
        { "name": "Old Radius", "type": "Double", "notes": "" },
        { "name": "New Radius", "type": "Double", "notes": "" },
        { "name": "Speed", "type": "VarLong", "notes": "" },
        {
          "name": "Portal Teleport Boundary",
          "type": "VarInt",
          "notes": "Resulting coordinates from a portal teleport are limited to +-value. Usually 29999984."
        },
        { "name": "Warning Time", "type": "VarInt", "notes": "" },
        { "name": "Warning Blocks", "type": "VarInt", "notes": "" },
        {
          "name": "4: set warning time",
          "type": "Warning Time",
          "notes": "VarInt"
        },
        {
          "name": "5: set warning blocks",
          "type": "Warning Blocks",
          "notes": "VarInt"
        }
      ]
    },
    {
      "name": "Title",
      "id": 69,
      "state": "Play",
      "direction": "Client",
      "fields": [
        { "name": "Action", "type": "VarInt", "notes": "" },
        { "name": "Action", "type": "Field Name", "notes": "" },
        { "name": "0: set title", "type": "Title Text", "notes": "Chat" },
        { "name": "1: set subtitle", "type": "Subtitle Text", "notes": "Chat" },
        {
          "name": "2: set times and display",
          "type": "Fade In",
          "notes": "Int"
        },
        { "name": "Stay", "type": "Int", "notes": "ticks" },
        { "name": "Fade Out", "type": "Int", "notes": "ticks" },
        { "name": "3: hide", "type": "no fields", "notes": "no fields" },
        { "name": "4: reset", "type": "no fields", "notes": "no fields" }
      ]
    },
    {
      "name": "Set Compression",
      "id": 70,
      "state": "Play",
      "direction": "Client",
      "fields": [
        {
          "name": "Threshold",
          "type": "VarInt",
          "notes": "Packets of this size or higher may be compressed"
        }
      ]
    },
    {
      "name": "Player List Header And Footer",
      "id": 71,
      "state": "Play",
      "direction": "Client",
      "fields": [
        { "name": "Header", "type": "Chat", "notes": "" },
        { "name": "Footer", "type": "Chat", "notes": "" }
      ]
    },
    {
      "name": "Resource Pack Send",
      "id": 72,
      "state": "Play",
      "direction": "Client",
      "fields": [
        {
          "name": "URL",
          "type": "String",
          "notes": "The URL to the resource pack."
        },
        {
          "name": "Hash",
          "type": "String",
          "notes": "A 40 character hexadecimal and lowercase SHA-1 hash of the resource pack file. (must be lower case in order to work)\nIf it's not a 40 character hexadecimal string, the client will not use it for hash verification and likely waste bandwidth — but it will still treat it as a unique id"
        }
      ]
    },
    {
      "name": "Update Entity NBT",
      "id": 73,
      "state": "Play",
      "direction": "Client",
      "fields": [
        { "name": "Entity ID", "type": "VarInt", "notes": "" },
        { "name": "Tag", "type": "NBT Tag", "notes": "" }
      ]
    },
    {
      "name": "Response",
      "id": 0,
      "state": "Status",
      "direction": "Client",
      "fields": [
        {
          "name": "JSON Response",
          "type": "String",
          "notes": "See Server List Ping#Response"
        }
      ]
    },
    {
      "name": "Pong",
      "id": 1,
      "state": "Status",
      "direction": "Client",
      "fields": [
        {
          "name": "Payload",
          "type": "Long",
          "notes": "Should be the same as sent by the client"
        }
      ]
    },
    {
      "name": "Disconnect",
      "id": 0,
      "state": "Login",
      "direction": "Client",
      "fields": [{ "name": "Reason", "type": "Chat", "notes": "" }]
    },
    {
      "name": "Encryption Request",
      "id": 1,
      "state": "Login",
      "direction": "Client",
      "fields": [
        {
          "name": "Server ID",
          "type": "String",
          "notes": "Appears to be empty"
        },
        {
          "name": "Public Key Length",
          "type": "VarInt",
          "notes": "Length of Public Key"
        },
        { "name": "Public Key", "type": "Byte Array", "notes": "" },
        {
          "name": "Verify Token Length",
          "type": "VarInt",
          "notes": "Length of Verify Token"
        },
        { "name": "Verify Token", "type": "Byte Array", "notes": "" }
      ]
    },
    {
      "name": "Login Success",
      "id": 2,
      "state": "Login",
      "direction": "Client",
      "fields": [
        {
          "name": "UUID",
          "type": "String",
          "notes": "Unlike in other packets, this field contains the UUID as a string with hyphens."
        },
        { "name": "Username", "type": "String", "notes": "" }
      ]
    },
    {
      "name": "Set Compression",
      "id": 3,
      "state": "Login",
      "direction": "Client",
      "fields": [
        {
          "name": "Threshold",
          "type": "VarInt",
          "notes": "Maximum size of a packet before its compressed"
        }
      ]
    }
  ]
}
